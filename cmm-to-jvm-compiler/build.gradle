plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    // generating lexer and parser code
    id 'antlr'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    antlr "org.antlr:antlr4:4.13.2"
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(22)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'Main'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// ANTLR:
// options for generating lexer and parser from antlr grammar
generateGrammarSource {
    arguments += ["-no-visitor", "-no-listener", "-package", "cmm_grammar"]
    group = "build"
    outputDirectory = file("$buildDir/generated-src/antlr/main/cmm_grammar")
}

sourceSets {
    // add the generated antlr files to the source
    main {
        java.srcDirs += "$buildDir/generated-src/antlr/main/"
    }
}

